global proc float Add(float $numbers[])
{
    float $sum = 0;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $sum += $numbers[$i];
    }
    
    return $sum;
}

Add({3, 10});

global proc float Subtract(float $numbers[])
{
    float $difference = 0;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $difference -= $numbers[$i];
    }
    
    return $difference;
}

Subtract({10,-4});

global proc float Multiply(float $numbers[])
{
    float $multiplication = 1;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $multiplication *= $numbers[$i];
    }
    
    return $multiplication;
}

Multiply({5,5});

global proc float Divide(float $numbers[])
{
    float $division = 6;
    
    for($i=0; $i<size($numbers); $i++)
    {
        $division /= $numbers[$i];
    }
    
    return $division;
}

Divide({12,2});

//Power
power (x, n);
//for loop

float $a = 3;
//int n = 2;
//float $power = $a;
for (i=0; $i < n; i++)
{
    $a = n[$i];
}

return $i;


//Mean Better
global proc float Mean(float $numbers[])
{
    float $meanValue;
    int $size = size($numbers);
    
    $numbers = sort($numbers);
    
    for($i=0; $i<size($numbers); $i++)
    {
        $meanValue += $numbers[$i] / $size;
    }
    
    return $meanValue;
}

Mean({6,5,7,9,3});
//Median Better
global proc float Median(float $numbers[])
{
    float $medianValue;
    int $size = size($numbers);
    
    $numbers = sort($numbers);
    
    if ($size % 2 == 0)
    {
        //even number
        int $highIndex = ($size / 2);
        int $lowIndex = $highIndex - 1;
        $medianValue = ($numbers[$highIndex] + $numbers[$lowIndex]) / 2;
    }
    
    else
    {
        //odd number
        int $index = ($size -1) / 2;
        $medianValue = $numbers[$index];
    }
    
    return $medianValue;
}

Median({1,3,7,12,4,-12});

//Mode Better
global proc float[] Mode(float $numbers[])
{
    float $mode[];
    float $values[];
    int $freq[];
    
    for($i=0; $i<size($numbers); $i++)
    {
        if (floatArrayContains($numbers[$i], $values) == 0) //new value
        {
            $values[size($values)] = $numbers[$i];
            $freq[size($freq)] = 1;            
        }
        
        else //value already appears
        {
            int $index = floatArrayFind($numbers[$i], 0, $values);
            $freq[$index] = $freq[$index] + 1;                      
        }
        
    }
    
    print ("Values:\n");
    print (floatArrayToString($values, ", "));
    print ("\nFrequency;\n");
    print (intArrayToString($freq, ", "));
    
    //Find the highest value in the frequency array. float is added on top line
    int $maxValue = 0;
    for($i=0; $i<size($freq); $i++)
    {
        if($freq[$i] > $maxValue)
        {
            $maxValue = $freq[$i];
        }
    }
    
    //Add [] after float on top line and $mode below
    while (intArrayFind($maxValue, 0, $freq) >= 0)
    {
        int $modeIndex = intArrayFind($maxValue, 0, $freq);
        $mode[size($mode)] = $values[$modeIndex];
        $freq[$modeIndex] = 0;
    }
    
    //int $modeIndex = intArrayFind($maxValue, 0, $freq);
   // $mode = $values[$modeIndex];
    
    return $mode;
}

Mode ({4,7,2,9,1,4,7,8,4});

//Calcuator

//Arguments
 //numbers (Array)
 //Operation
 
//.... proc Calculator (float $numbers[], int $operation)
   //if(operation == 0)
   //{
       //Add($numbers)
         //Pretty Print
   //}
global proc Calculator(float $numbers[], string $operation)
{
    
    if($operation == "Add")
    {
        print (Add($numbers));                
    }
    
    if($operation == "Subtract")
    {
        print (Subtract($numbers));
    }
    
    if($operation == "Multiply")
    {
        print (Multiply($numbers));
    }
    if($operation == "Divide")
    {
        print (Divide($numbers));
    }
    
   
}

Calculator({4,3}, "Add");
Calculator({5,-4}, "Subtract");
Calculator({2,5}, "Multiply");
Calculator({6,2}, "Divide");
Add({4,3});
Subtract({5,-4});
Multiply({2,5});
Divide({6,2});

Mean({4,9,2,6,1});
Median({1,3,7,12,4,-12});
Mode ({4,7,2,9,1,4,7,8,4});
